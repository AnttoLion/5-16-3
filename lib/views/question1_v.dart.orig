import 'dart:async';

import 'package:extra_staff/utils/ab.dart';
import 'package:extra_staff/utils/constants.dart';
import 'package:extra_staff/views/question2_v.dart';
import 'package:flutter/material.dart';
import 'package:get/get.dart';

class Question1View extends StatefulWidget {
  @override
<<<<<<< Updated upstream
  _Question1View createState() => _Question1View();
}

class _Question1View extends State<Question1View> {
  var left = 0.0;
  var right = 0.0;
  var opacity = 0.0;
  var finalWidth = 0.0;
  var finalHeight = 100.0;
  final duration = Duration(milliseconds: 1000);

  @override
  void initState() {
    super.initState();
    Future.delayed(Duration(milliseconds: 100), () {
      setState(() {
        finalWidth = MediaQuery.of(context).size.width;
        finalHeight = (MediaQuery.of(context).size.height - 100) / 2;
        left = finalWidth;
        right = -finalWidth;
      });
    }).then((value) {
      Future.delayed(duration, () {
        setState(() {
          left = 0;
          right = 0;
          opacity = 1;
        });
      });
    });
=======
  _Question1ViewState createState() => _Question1ViewState();
}

class _Question1ViewState extends State<Question1View>
    with SingleTickerProviderStateMixin {
  late AnimationController _animationController;

  @override
  void initState() {
    _animationController =
        AnimationController(vsync: this, duration: Duration(milliseconds: 300));
    Timer(Duration(milliseconds: 100), () => _animationController.forward());

    super.initState();
  }

  @override
  void dispose() {
    _animationController.dispose();
    super.dispose();
>>>>>>> Stashed changes
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: abQuestions(context, 1, 5),
      body: SafeArea(
        child: Container(
          child: Column(
            crossAxisAlignment: CrossAxisAlignment.stretch,
            children: [
<<<<<<< Updated upstream
              Flexible(
                child: Container(
                  padding: EdgeInsets.symmetric(horizontal: 28),
                  color: MyColors.white,
                  child: Stack(
                    children: [
                      AnimatedPositioned(
                        duration: duration,
                        left: left,
                        right: right,
                        height: finalHeight,
                        child: AnimatedOpacity(
                          duration: duration,
                          opacity: opacity,
                          child: Column(
                            mainAxisAlignment: MainAxisAlignment.spaceAround,
                            crossAxisAlignment: CrossAxisAlignment.stretch,
                            children: [
                              Text.rich(
                                TextSpan(
                                  text: '',
                                  children: [
                                    TextSpan(
                                      text: 'Are you able to \n\n',
                                      style: TextStyle(
                                        fontWeight: FontWeight.normal,
                                        fontSize: 28,
                                      ),
                                    ),
                                    TextSpan(
                                      text: 'Work in UK?',
                                      style: TextStyle(
                                        fontWeight: FontWeight.bold,
                                        fontSize: 28,
                                        color: MyColors.offBlue,
                                      ),
                                    ),
                                  ],
                                ),
                              ),
                              Text(
                                'Eligibility',
                                style: TextStyle(
                                  color: MyColors.grey,
                                  fontSize: 18,
                                ),
                              ),
                            ],
                          ),
                        ),
                      ),
                    ],
                  ),
                ),
=======
              TextWidget(
                animationController: _animationController,
>>>>>>> Stashed changes
              ),
              Flexible(
                child: Container(
                  padding: EdgeInsets.symmetric(horizontal: 28),
                  color: MyColors.blue,
                  child: Stack(
                    children: [
                      AnimatedPositioned(
                        duration: duration,
                        left: left,
                        right: right,
                        child: AnimatedOpacity(
                          duration: duration,
                          opacity: opacity,
                          child: Column(
                            mainAxisAlignment: MainAxisAlignment.start,
                            crossAxisAlignment: CrossAxisAlignment.stretch,
                            children: [
                              abSpacing(50),
                              TextButton(
                                onPressed: () => action(true),
                                child: abQuestionButton('Yes'),
                                style: ButtonStyle(
                                  padding: MaterialStateProperty.all(
                                      EdgeInsets.zero),
                                ),
                              ),
                              abSpacing(15),
                              TextButton(
                                onPressed: () => action(false),
                                child: abQuestionButton('No'),
                                style: ButtonStyle(
                                  padding: MaterialStateProperty.all(
                                      EdgeInsets.zero),
                                ),
                              ),
                            ],
                          ),
                        ),
                      ),
                    ],
                  ),
                ),
              ),
            ],
          ),
        ),
      ),
    );
  }

  void action(bool isYes) {
    setState(() {
      opacity = 0;
      left = -finalWidth;
      right = finalWidth;
    });
    Future.delayed(duration, () {
      Get.to(Question2View());
      setState(() {
        left = 0;
        right = 0;
        opacity = 1;
      });
    });
  }
}

class TextWidget extends StatelessWidget {
  final AnimationController animationController;

  TextWidget({
    required this.animationController,
  });

  @override
  Widget build(BuildContext context) {
    return Flexible(
        child: SlideTransition(
      position: Tween<Offset>(
        begin: Offset(1, 0),
        end: Offset.zero,
      ).animate(animationController),
      child: FadeTransition(
        opacity: animationController,
        child: Container(
          padding: EdgeInsets.symmetric(horizontal: 28),
          color: MyColors.white,
          child: Column(
            mainAxisAlignment: MainAxisAlignment.spaceAround,
            crossAxisAlignment: CrossAxisAlignment.stretch,
            children: [
              Text.rich(
                TextSpan(
                  text: '',
                  children: [
                    TextSpan(
                      text: 'Are you able to \n\n',
                      style: TextStyle(
                        fontWeight: FontWeight.normal,
                        fontSize: 28,
                      ),
                    ),
                    TextSpan(
                      text: 'Work in UK?',
                      style: TextStyle(
                        fontWeight: FontWeight.bold,
                        fontSize: 28,
                        color: MyColors.offBlue,
                      ),
                    ),
                  ],
                ),
              ),
              Text(
                'Eligibility',
                style: TextStyle(
                  color: MyColors.grey,
                  fontSize: 18,
                ),
              ),
            ],
          ),
        ),
      ),
    ));
  }
}

// class TextAndImage extends StatelessWidget {
//   final AnimationController animationController;

//   TextAndImage({
//     @required this.animationController,
//   });

//   @override
//   Widget build(BuildContext context) {
//     return Padding(
//       padding: const EdgeInsets.only(top: 50.0),
//       child: SafeArea(
//         child: Column(
//           children: <Widget>[
//             SlideTransition(
//               position: Tween<Offset>(
//                 begin: Offset(-1, 0),
//                 end: Offset.zero,
//               ).animate(animationController),
//               child: FadeTransition(
//                 opacity: animationController,
//                 child: Container(
//                   padding: EdgeInsets.all(16.0),
//                   alignment: Alignment.centerLeft,
//                   child: Text(
//                     'An interesting title',
//                     style: TextStyle(
//                       fontSize: 24,
//                     ),
//                   ),
//                 ),
//               ),
//             ),
//             Padding(
//               padding: const EdgeInsets.all(8.0),
//               child: ClipRRect(
//                 borderRadius: BorderRadius.all(Radius.circular(15)),
//                 child: Align(
//                   heightFactor: 0.826,
//                   alignment: Alignment.topLeft,
//                   child: Image.network(
//                     'https://images.pexels.com/photos/320014/pexels-photo-320014.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=400',
//                     fit: BoxFit.fitWidth,
//                   ),
//                 ),
//               ),
//             ),
//           ],
//         ),
//       ),
//     );
//   }
// }
